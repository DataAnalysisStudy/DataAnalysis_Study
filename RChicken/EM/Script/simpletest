###### data
x <- c(15.2, 15.7, 16.4, 14.8, 15.0, 5.5, 8.1, 5.5, 7.1, 7.2)
y <- c(3.6, 5.0, 4.7, 5.5, 5.3, 13.3, 15.7, 15.6, 17.0, 11.4)
dat <- data.frame(x, y)

mu1x <- mean(x[6:10])
mu2x <- mean(x[1:5])
mu1y <- mean(y[1:5])
mu2y <- mean(y[6:10])

si1 <- diag(2)
si2 <- diag(2)

t1 <- 0.5
t2 <- 0.5
 
## E step - 1

library(mvtnorm)
fx1 <- dmvnorm(dat, mean = c(mu1x, mu1y), sigma = si1)
fx2 <- dmvnorm(dat, mean = c(mu2x, mu2y), sigma = si2)

T1 <- (t1 * fx1)/(t1 * fx1 + t2 * fx2)
T2 <- (t2 * fx2)/(t1 * fx1 + t2 * fx2)

round(T1, 2)
round(T2, 2)

class <- apply(cbind(T1, T2), 1, which.max)

### M Step - 1

t1 <- sum(T1)/10
t2 <- sum(T2)/10

mu1x <- sum(T1 * x)/sum(T1)
mu2x <- sum(T2 * x)/sum(T2)
mu1y <- sum(T1 * y)/sum(T1)
mu2y <- sum(T2 * y)/sum(T2)

si1 <- t(T1 * cbind(x - mu1x, y - mu1y)) %*% cbind(x - mu1x, y - mu1y)/sum(T1)
si2 <- t(T2 * cbind(x - mu2x, y - mu2y)) %*% cbind(x - mu2x, y - mu2y)/sum(T2)

## E step - 2

fx1 <- dmvnorm(dat, mean = c(mu1x, mu1y), sigma = si1)
fx2 <- dmvnorm(dat, mean = c(mu2x, mu2y), sigma = si2)

T1 <- (t1 * fx1)/(t1 * fx1 + t2 * fx2)
T2 <- (t2 * fx2)/(t1 * fx1 + t2 * fx2)

round(T1, 2)
round(T2, 2)

class <- apply(cbind(T1, T2), 1, which.max)

### M Step - 2

t1 <- sum(T1)/10
t2 <- sum(T2)/10

mu1x <- sum(T1 * x)/sum(T1)
mu1y <- sum(T1 * y)/sum(T1)
mu2x <- sum(T2 * x)/sum(T2)
mu2y <- sum(T2 * y)/sum(T2)

si1 <- t(T1 * cbind(x - mu1x, y - mu1y)) %*% cbind(x - mu1x, y - mu1y)/sum(T1)
si2 <- t(T2 * cbind(x - mu2x, y - mu2y)) %*% cbind(x - mu2x, y - mu2y)/sum(T2)

## E step - 3

fx1 <- dmvnorm(dat, mean = c(mu1x, mu1y), sigma = si1)
fx2 <- dmvnorm(dat, mean = c(mu2x, mu2y), sigma = si2)

T1 <- (t1 * fx1)/(t1 * fx1 + t2 * fx2)
T2 <- (t2 * fx2)/(t1 * fx1 + t2 * fx2)

round(T1, 2)
round(T2, 2)

class <- apply(cbind(T1, T2), 1, which.max)

### M Step - 3

t1 <- sum(T1)/10
t2 <- sum(T2)/10

mu1x <- sum(T1 * x)/sum(T1)
mu1y <- sum(T1 * y)/sum(T1)
mu2x <- sum(T2 * x)/sum(T2)
mu2y <- sum(T2 * y)/sum(T2)

si1 <- t(T1 * cbind(x - mu1x, y - mu1y)) %*% cbind(x - mu1x, y - mu1y)/sum(T1)
si2 <- t(T2 * cbind(x - mu2x, y - mu2y)) %*% cbind(x - mu2x, y - mu2y)/sum(T2)

## E step - 4

fx1 <- dmvnorm(dat, mean = c(mu1x, mu1y), sigma = si1)
fx2 <- dmvnorm(dat, mean = c(mu2x, mu2y), sigma = si2)

T1 <- (t1 * fx1)/(t1 * fx1 + t2 * fx2)
T2 <- (t2 * fx2)/(t1 * fx1 + t2 * fx2)

round(T1, 2)
round(T2, 2)

class <- apply(cbind(T1, T2), 1, which.max)

### M Step - 4
t1 <- sum(T1)/10
t2 <- sum(T2)/10
