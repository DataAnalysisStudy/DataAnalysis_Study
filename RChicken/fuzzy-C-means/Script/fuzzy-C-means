rm(list = ls())
library(plotly)
library(plyr)
library(mvtnorm)

####### 데이터 셋 구축

x1 <- rnorm(50, 10, 1)
x2 <- rnorm(50, 20, 1)
x3 <- rnorm(50, 30, 1)
y1 <- rnorm(50, 20, 1)
y2 <- rnorm(50, 10, 1)
y3 <- rnorm(50, 30, 1)

x <- c(x1, x2)
y <- c(y1, y2)
# 
# x <- c(x1, x2, x3)
# y <- c(y1, y2, y3)

data <- data.frame(x = x, y = y)

rm(x1, x2, x3, y1, y2, y3, x, y)

plot_ly(data, x = ~x, y = ~y)



####### 중심점과 클러스터 그리기

graph <- function(){
  
  plot_ly(data, x = ~x, y = ~y, color = as.factor(class), type = "scatter") %>%
    add_trace(x = ~x, y = ~y, color = rownames(center), data = data.frame(center), type = "scatter")
  
}

##### 군집 수 지정

dimension = 2

fuzzyC <- function(x){
  
  ###################### 초기값 설정 
  
  m = 2
  count = 0
  
  ## 군집 중심 
  centerCal <- function(w){
    
    if(count == 0){
      center <- apply(data, 2, function(x){
        quantile(x, seq(0, 1, length.out = 2 + dimension))
        
      }
      )
      center <- center[-c(1, nrow(center)), ]
      rownames(center) <- paste0("w", 1:ncol(data))
      
      return(center)
      
    }
  
    center <- t(apply(w, 2, function(wcol){
      
      wTemp <- matrix(wcol, ncol = ncol(data), nrow = nrow(data), byrow = F)^m
      apply(wTemp * data, 2, sum) / apply(wTemp, 2, sum)
                        
    }))
    
    return(center)
    
  }
  
  
  ## 군집에 속할 확률
  wCal <- function(w){
    
    if(count == 0){
      
      w <- matrix(1/ncol(data), ncol = ncol(data), nrow = nrow(data))
      colnames(w) <- paste0("w", 1:ncol(data))
      
    }
    
    #### 중심점과 데이터의 차이 계산 
    di <- apply(center, 1, function(cent){
      dif <- data -  matrix(cent, nrow = nrow(data), ncol = ncol(data), byrow = T)
      dif <- dif^2
      dif <- apply(dif, 1, function(x){
        sqrt(sum(x))
      })
      return(dif)
    })
    
    #### 중심점과의 거리를 이용하여 군집에 속할 확률 계산 
    for(i in 1:ncol(data)){
      w[, i] <- apply(di, 1, function(x){
        1/sum((x[i]/x)^(2/(m-1)))
      })
    }
    
    count <<- count + 1
    return(w)
  }
  
  center <- centerCal()
  w <- wCal(w)
  
  center <- centerCal(w)
  w <- wCal(w)
  
  ## 속할 군집 계산
  class <- as.factor(apply(w, 1, which.max))
  graph()
  
}
